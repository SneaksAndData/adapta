[tool.poetry]
name = "adapta"
version = "0.0.0"
description = "Logging, data connectors, monitoring, secret handling and general lifehacks to make data people lives easier."
authors = ["ECCO Sneaks & Data <esdsupport@ecco.com>"]
maintainers = ['GZU <gzu@ecco.com>', 'JRB <ext-jrb@ecco.com>']
license = 'Apache-2.0'
readme = "README.md"
repository = 'https://github.com/SneaksAndData/adapta'

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
requests = "^2.26"
backoff = "^2.2"
cryptography = ">=36"
pandas = { version = ">=2.0.0,<3.0", extras = ["performance"] }
pyarrow = ">=7.0"
dataclasses-json = "~0.6"
limits = "~3.7"
polars = ">=1.7 <2.0"
pandera = ">=0.20.3 <1.0"
xlsxwriter = { version = "^3.0", optional = true }
fastexcel = { version = "^0.14.0", optional = true }
openpyxl = { version = "^3.0", optional = true }

cassandra-driver = { version = "~3.29.1", optional = true }

deltalake = { version = "^0.18.1", optional = true }

azure-identity = { version = "^1.7", optional = true }
azure-storage-blob = { version = ">12.7.0,<=12.16.0", optional = true }
azure-mgmt-storage = { version = "~19.1.0", optional = true }
azure-keyvault-secrets = { version = "^4.3", optional = true }
azure-servicebus = { version = "~7.6", optional = true }
adlfs = { version = '~2024', optional = true }

boto3 = { version = "^1.28.0", optional = true}
botocore = { version = "^1.31", optional = true}

datadog = { version = "~0.49.1", optional = true }
datadog-api-client = { version = "~2.18.0", optional = true }

SQLAlchemy = { version = "~2.0", optional = true }
pyodbc = { version = "~4.0", optional = true }

mlflow-skinny = { version = "~2.17.0", optional = true }

redis = { version = "~4.4.0", optional = true, extras = ['hiredis'] }

hvac = { version = "~0.11.2", optional = true }

fsspec = { version = "^2024" }

trino = { version = "^0.330", optional = true, extras = ['sqlalchemy'] }

snowflake-connector-python = { version = "^3.4.0", optional = true }

[tool.poetry.extras]
azure = [
    'azure-identity',
    'azure-storage-blob',
    'azure-mgmt-storage',
    'azure-keyvault-secrets',
    'adlfs'
]
azure-servicebus = [
    'azure-servicebus',
]
datadog = [
    'datadog',
    'datadog-api-client'
]
databases = [
    'SQLAlchemy',
    'pyodbc'
]
ml = [
    'mlflow-skinny'
]
caching = [
    'redis'
]

hashicorp = [
    'hvac'
]

trino = [
    'trino'
]

snowflake = [
    'snowflake-connector-python'
]

storage = [
    "deltalake",
    "cassandra-driver"
]

aws = [
    "boto3",
    "botocore"
]

excel = [
    "xlsxwriter",
    "fastexcel",
    "openpyxl"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.1"
pytest-mock = "~3.6.1"
pytest-xdist = "~3.5.0"
pytest-asyncio = "~0.23.3"
pytest-cov = "~2.12"
pylint = "^3"
cryptography = "~36.0"
black = "^23"

[tool.black]
line-length = 120

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
